set shell bash
map R &./run.sh $f
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
map <enter> :push !
map ; :push $
map x !$f
set icons
map . :set hidden!
map I $less +G $f


# Path links
map gw cd /work
map gc cd /dot/dot-config/lf
map gy cd /work/yb/
map gt cd /tmp
map gd cd /dot
map gH cd /work/yb/hal
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}


# dedicated keys for file opener actions
map o &mimeopen $f
map O $mimeopen --ask $f

#delete key
map D :delete

cmd open &{{
    case $(file --mime-type -Lb $f) in
        text/*) lf -remote "send $id \$$EDITOR \$fx";;
        appliction/pdf) lf -remote "zathura \$fx";;
        *) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}
# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

#Previews
set previewer ctpv
set cleaner ctpvclear
&ctpv -s $id
&ctpvquit $id

# new dirs/files, emulating NERDTree
cmd new_node %{{
    target="$1"
    if [[ "$target" == */ ]]; then
        mkdir -p "$target"
    else
        touch "$target"
    fi
}}
map m
map mr &./run.sh $f
map ma :push :new_node<space>
map mp $realpath $f | xclip -selection clipboard
